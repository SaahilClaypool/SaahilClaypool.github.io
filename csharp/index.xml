<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C# on </title>
    <link>https://saahilclaypool.github.io/csharp/</link>
    <description>Recent content in C# on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 19 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://saahilclaypool.github.io/csharp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dotnet interactive as a query playground</title>
      <link>https://saahilclaypool.github.io/csharp/dotnet_interactive/</link>
      <pubDate>Fri, 27 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://saahilclaypool.github.io/csharp/dotnet_interactive/</guid>
      <description>&lt;p&gt;The tool I miss most when leaving ruby-on-rails is the &lt;a href=&#34;https://guides.rubyonrails.org/command_line.html&#34;&gt;rails console&lt;/a&gt; because it allows the me (or any developer) to run queries against the database in the same language as the rest of the codebase.
This is extremely useful for testing out queries that I&amp;rsquo;m writing in some service ( like &lt;code&gt;User.where(&#39;age &amp;gt; 15)&lt;/code&gt;) or for ad-hoc data updates (like &lt;code&gt;User.last.update(email: &#39;test@test.org&#39;)&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Recently, with the release of &lt;a href=&#34;https://github.com/dotnet/interactive&#34;&gt;dotnet interactive&lt;/a&gt;, I&amp;rsquo;ve found a way to build myself a fairly close approximation.
An example notebook that loads a DLL with an appropriate DbContext and executes a few queries can be found &lt;a href=&#34;https://github.com/SaahilClaypool/BookyAPI/blob/221c8fc847ca2ba28b4347f6a094b52fc9a59b6d/Scratch.ipynb&#34;&gt;here&lt;/a&gt;(github).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://saahilclaypool.github.io/BookyInteractive.png&#34; alt=&#34;Interactive Example&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Configure Await</title>
      <link>https://saahilclaypool.github.io/csharp/configure_await/</link>
      <pubDate>Sun, 09 Aug 2020 18:09:50 -0400</pubDate>
      
      <guid>https://saahilclaypool.github.io/csharp/configure_await/</guid>
      <description>&lt;p&gt;Reading through a &lt;a href=&#34;https://github.com/ivanpaulovich/clean-architecture-manga/tree/dotnet5&#34;&gt;asp.net core project&lt;/a&gt;,
I came across number of calls that looked like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;affectedRows&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_context&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SaveChangesAsync&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ConfigureAwait&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// ME: what does this do?
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;affectedRows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I dug into what this was actually doing by reading &lt;a href=&#34;https://devblogs.microsoft.com/dotnet/configureawait-faq/&#34;&gt;this blog&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;await&lt;/code&gt; uses a custom callback strategy based on the calling context&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ConfigureAwait(false)&lt;/code&gt; ignores the custom strategy.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Dotnet query console</title>
      <link>https://saahilclaypool.github.io/csharp/query_console/</link>
      <pubDate>Sat, 11 Jul 2020 18:09:50 -0400</pubDate>
      
      <guid>https://saahilclaypool.github.io/csharp/query_console/</guid>
      <description>&lt;p&gt;As I&amp;rsquo;ve developed with Rails, the feature I&amp;rsquo;ve come to appreciate the most is the &lt;code&gt;rails console&lt;/code&gt;.
It gives you an immediately connected view into your application - fully hooked up to all of your code and to your database.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>